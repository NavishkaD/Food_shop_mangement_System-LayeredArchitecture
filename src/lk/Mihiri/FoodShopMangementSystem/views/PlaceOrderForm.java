/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.Mihiri.FoodShopMangementSystem.views;

import lk.Mihiri.FoodShopMangementSystem.controller.CustomerFormController;
import lk.Mihiri.FoodShopMangementSystem.controller.ItemFormController;
import lk.Mihiri.FoodShopMangementSystem.controller.OrderFormController;
import lk.Mihiri.FoodShopMangementSystem.dto.CustomerDTO;
import lk.Mihiri.FoodShopMangementSystem.dto.ItemDTO;
import lk.Mihiri.FoodShopMangementSystem.dto.OrderDTO;
import lk.Mihiri.FoodShopMangementSystem.dto.OrderDetailDTO;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import lk.Mihiri.FoodShopMangementSystem.entity.Customer;
import lk.Mihiri.FoodShopMangementSystem.entity.Item;
import lk.Mihiri.FoodShopMangementSystem.entity.Order;
import lk.Mihiri.FoodShopMangementSystem.entity.OrderDetail;


/**
 *
 * @author niroth
 */
public class PlaceOrderForm extends javax.swing.JFrame {

      DefaultTableModel dtm;
    
    /**
     * Creates new form OrderForm
     */
    public PlaceOrderForm() throws Exception {
        initComponents();
        setLocationRelativeTo(null);

        // Setting current date
        Date date = new Date();
        String formatDate = formatDate(date);
        txtOrderDate.setText(formatDate);

        // Generating order id
        generateOrderId();
        // Load all customers
        loadAllCustomers();
        // Load all items
        loadAllItems();
        calculateTotalValue();

    }

    private void loadAllItems() throws Exception {
        try {
            ArrayList<ItemDTO> alItems =new ItemFormController().getAllItems();

            for (ItemDTO item : alItems) {
                cmbItemCode.addItem(item.getItemcode());
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(PlaceOrderForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadAllCustomers() {
        try {
            ArrayList<CustomerDTO> allCustomers = new CustomerFormController().getAllCustomers();
            for (CustomerDTO customerDTO : allCustomers) {
                cmbCustomerId.addItem(customerDTO.getCustomerID()
                );
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(PlaceOrderForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void generateOrderId() {
        String orderId;
        try {
            orderId = new OrderFormController().generateOrderId();
            lblOrderId.setText(orderId);
        } catch (Exception ex) {
            Logger.getLogger(PlaceOrderForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private String formatDate(Date date) {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        return sdf.format(date);
    }

    private void calculateTotalValue() {

        DefaultTableModel dtm = (DefaultTableModel) tblItemDetails.getModel();

        double total = 0;
        for (int i = 0; i < dtm.getRowCount(); i++) {
            total += (double) dtm.getValueAt(i, 4);
        }

        lblTotal.setText(total + "");
    }

    private int isAlreadyExists(String itemCode) {

        DefaultTableModel dtm = (DefaultTableModel) tblItemDetails.getModel();

        for (int i = 0; i < dtm.getRowCount(); i++) {
            String code = (String) dtm.getValueAt(i, 0);
            if (code.equals(itemCode)) {
                return i;
            }
        }

        return -1;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        lblOrderId = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtOrderDate = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblItemDetails = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        btnPlaceOrder = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        addNewCustomerButton = new javax.swing.JButton();
        lblDescription = new javax.swing.JLabel();
        cmbItemCode = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cmbCustomerId = new javax.swing.JComboBox<>();
        lblCustomerName = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtSerchCustomer = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        lblUnitPrice = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        lblQtyOnHand = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblCusAdress = new javax.swing.JLabel();
        txtQty = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setTitle("Place Order Form");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Noto Sans", 1, 18)); // NOI18N
        jLabel2.setText("Order ID : ");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 125, -1, 27));

        lblOrderId.setFont(new java.awt.Font("Noto Sans", 1, 18)); // NOI18N
        getContentPane().add(lblOrderId, new org.netbeans.lib.awtextra.AbsoluteConstraints(117, 125, 114, 27));

        jLabel4.setFont(new java.awt.Font("Noto Sans", 1, 16)); // NOI18N
        jLabel4.setText("Order Date :");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(632, 128, -1, -1));

        txtOrderDate.setFont(new java.awt.Font("Noto Sans", 1, 16)); // NOI18N
        getContentPane().add(txtOrderDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(754, 125, 176, -1));

        tblItemDetails.setFont(new java.awt.Font("Noto Sans", 1, 18)); // NOI18N
        tblItemDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Code", "Description", "Qty", "Unit Price", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblItemDetails.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblItemDetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblItemDetailsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblItemDetails);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 508, 920, 120));

        btnAdd.setBackground(new java.awt.Color(0, 0, 0));
        btnAdd.setFont(new java.awt.Font("Noto Sans", 1, 18)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(831, 464, 106, -1));

        btnRemove.setBackground(new java.awt.Color(255, 0, 0));
        btnRemove.setFont(new java.awt.Font("Noto Sans", 1, 18)); // NOI18N
        btnRemove.setForeground(new java.awt.Color(255, 255, 255));
        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });
        getContentPane().add(btnRemove, new org.netbeans.lib.awtextra.AbsoluteConstraints(697, 464, -1, -1));

        btnPlaceOrder.setBackground(new java.awt.Color(0, 0, 0));
        btnPlaceOrder.setFont(new java.awt.Font("Noto Sans", 1, 18)); // NOI18N
        btnPlaceOrder.setForeground(new java.awt.Color(255, 255, 255));
        btnPlaceOrder.setText("Place Order");
        btnPlaceOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlaceOrderActionPerformed(evt);
            }
        });
        getContentPane().add(btnPlaceOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(802, 645, -1, -1));

        jPanel1.setBackground(new java.awt.Color(40, 40, 40));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Noto Sans", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Place Order Form");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(353, 17, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 970, 60));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        addNewCustomerButton.setText("New Customer");
        addNewCustomerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewCustomerButtonActionPerformed(evt);
            }
        });
        jPanel2.add(addNewCustomerButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 106, -1, -1));

        lblDescription.setFont(new java.awt.Font("Noto Sans", 1, 18)); // NOI18N
        lblDescription.setForeground(new java.awt.Color(0, 0, 102));
        lblDescription.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDescription.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.add(lblDescription, new org.netbeans.lib.awtextra.AbsoluteConstraints(698, 58, 165, 30));

        cmbItemCode.setFont(new java.awt.Font("Noto Sans", 1, 18)); // NOI18N
        cmbItemCode.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbItemCodeItemStateChanged(evt);
            }
        });
        jPanel2.add(cmbItemCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(476, 58, 126, -1));

        jLabel8.setFont(new java.awt.Font("Noto Sans", 1, 16)); // NOI18N
        jLabel8.setText("Item Name :");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(476, 26, -1, -1));

        jLabel9.setFont(new java.awt.Font("Noto Sans", 1, 16)); // NOI18N
        jLabel9.setText("Item Code:");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(698, 26, -1, -1));

        jLabel5.setFont(new java.awt.Font("Noto Sans", 1, 16)); // NOI18N
        jLabel5.setText("Select Customer ID : ");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 22, -1, -1));

        cmbCustomerId.setFont(new java.awt.Font("Noto Sans", 1, 16)); // NOI18N
        cmbCustomerId.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbCustomerIdItemStateChanged(evt);
            }
        });
        jPanel2.add(cmbCustomerId, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 61, 160, -1));

        lblCustomerName.setFont(new java.awt.Font("Noto Sans", 1, 16)); // NOI18N
        lblCustomerName.setForeground(new java.awt.Color(102, 102, 102));
        jPanel2.add(lblCustomerName, new org.netbeans.lib.awtextra.AbsoluteConstraints(177, 156, 166, 30));

        jLabel6.setFont(new java.awt.Font("Noto Sans", 1, 16)); // NOI18N
        jLabel6.setText("Customer Name :");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 165, -1, -1));

        txtSerchCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSerchCustomerActionPerformed(evt);
            }
        });
        jPanel2.add(txtSerchCustomer, new org.netbeans.lib.awtextra.AbsoluteConstraints(227, 61, 134, 27));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel3.setText("OR");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 70, -1, -1));

        lblUnitPrice.setFont(new java.awt.Font("Noto Sans", 1, 16)); // NOI18N
        lblUnitPrice.setForeground(new java.awt.Color(0, 0, 102));
        lblUnitPrice.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUnitPrice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.add(lblUnitPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(476, 156, 130, 30));

        jLabel11.setFont(new java.awt.Font("Noto Sans", 1, 16)); // NOI18N
        jLabel11.setText("Unit Price");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(476, 129, -1, -1));

        lblQtyOnHand.setFont(new java.awt.Font("Noto Sans", 1, 16)); // NOI18N
        lblQtyOnHand.setForeground(new java.awt.Color(0, 0, 102));
        lblQtyOnHand.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblQtyOnHand.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.add(lblQtyOnHand, new org.netbeans.lib.awtextra.AbsoluteConstraints(698, 156, 166, 30));

        jLabel13.setFont(new java.awt.Font("Noto Sans", 1, 16)); // NOI18N
        jLabel13.setText("Qty. on Hand ");
        jPanel2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(698, 129, -1, -1));

        jLabel15.setFont(new java.awt.Font("Noto Sans", 1, 16)); // NOI18N
        jLabel15.setText("Qty. ");
        jPanel2.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(698, 230, -1, -1));

        jLabel7.setFont(new java.awt.Font("Noto Sans", 1, 16)); // NOI18N
        jLabel7.setText("Customer Address :");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 224, -1, -1));

        lblCusAdress.setFont(new java.awt.Font("Noto Sans", 1, 16)); // NOI18N
        lblCusAdress.setForeground(new java.awt.Color(102, 102, 102));
        jPanel2.add(lblCusAdress, new org.netbeans.lib.awtextra.AbsoluteConstraints(181, 215, 180, 30));
        jPanel2.add(txtQty, new org.netbeans.lib.awtextra.AbsoluteConstraints(736, 228, 128, 31));

        jLabel10.setFont(new java.awt.Font("Noto Sans", 1, 16)); // NOI18N
        jLabel10.setText("Enter PhoneNO:");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(227, 22, 134, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 170, 913, 267));

        jPanel3.setBackground(new java.awt.Color(153, 153, 153));

        jLabel16.setFont(new java.awt.Font("Noto Sans", 1, 20)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 0, 0));
        jLabel16.setText("Total : ");

        lblTotal.setFont(new java.awt.Font("Noto Sans", 1, 20)); // NOI18N
        lblTotal.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel16)
                .addGap(6, 6, 6)
                .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(711, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(598, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 970, 650));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbCustomerIdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbCustomerIdItemStateChanged
        try {
            String customerID = cmbCustomerId.getSelectedItem().toString();
            Customer customer =new CustomerFormController().searchCustomer(customerID);
            lblCustomerName.setText(customer.getName());
            txtSerchCustomer.setText(customer.getContacts());
            lblCusAdress.setText(customer.getAddress());
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(PlaceOrderForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmbCustomerIdItemStateChanged

    private void cmbItemCodeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbItemCodeItemStateChanged

        try {
            String itemCode = cmbItemCode.getSelectedItem().toString();

            Item item =new ItemFormController().searchItem(itemCode);
            lblDescription.setText(item.getName());
            lblQtyOnHand.setText(item.getQtyOnHand() + "");
            lblUnitPrice.setText(item.getUnitPrice() + "");

            txtQty.requestFocus();
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(PlaceOrderForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_cmbItemCodeItemStateChanged

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed

        DefaultTableModel model = (DefaultTableModel) tblItemDetails.getModel();

        int qty = Integer.parseInt(txtQty.getText());
        double unitPrice = Double.parseDouble(lblUnitPrice.getText());
        double total = qty * unitPrice;

        int rowIndex = isAlreadyExists(cmbItemCode.getSelectedItem().toString());

        if (rowIndex == -1) {
            Object[] rowData = {
                cmbItemCode.getSelectedItem().toString(),
                lblDescription.getText(),
                qty,
                unitPrice,
                total
            };
            model.addRow(rowData);
        } else {
            qty += (int) model.getValueAt(rowIndex, 2);
            total = qty * unitPrice;
            tblItemDetails.setValueAt(qty, rowIndex, 2);
            tblItemDetails.setValueAt(total, rowIndex, 4);
        }

        calculateTotalValue();
        cmbItemCode.requestFocus();

    }//GEN-LAST:event_btnAddActionPerformed

    private void tblItemDetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblItemDetailsMouseClicked

    }//GEN-LAST:event_tblItemDetailsMouseClicked

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed

        int selectedRow = tblItemDetails.getSelectedRow();

        if (selectedRow == -1) {
            return;
        }

        DefaultTableModel dtm = (DefaultTableModel) tblItemDetails.getModel();
        dtm.removeRow(selectedRow);

        calculateTotalValue();

    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnPlaceOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlaceOrderActionPerformed
        
           
       
       
      try {
            //        details for orders table
        String orderId = lblOrderId.getText();
        String orderDate = txtOrderDate.getText();
        String customerId = (String) cmbCustomerId.getSelectedItem();

            OrderDTO order = new OrderDTO(orderId, orderDate, customerId);

//        details for OrderDetails
            ArrayList<OrderDetailDTO> allOrderDetails = new ArrayList<>();
            for (int i = 0; i < tblItemDetails.getRowCount(); i++) {

                String itemCode = tblItemDetails.getValueAt(i, 0).toString();
                int qty = Integer.parseInt(tblItemDetails.getValueAt(i, 2).toString());
                double unitPrice = Double.parseDouble(tblItemDetails.getValueAt(i, 3).toString());

                OrderDetailDTO orderDetail = new OrderDetailDTO(orderId, itemCode, qty, unitPrice);
                order.getOrderDetails().add(orderDetail);
                
            }

           boolean purchaseOrder = new OrderFormController().purchaseOrder(order);
           
            if (purchaseOrder) {
                JOptionPane.showMessageDialog(this, "Order Placed");
            } else {
                JOptionPane.showMessageDialog(this, "Eroor");
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(PlaceOrderForm.class.getName()).log(Level.SEVERE, null, ex);
        }
      
      /*
      
       try {
            //        details for orders table
            String orderID = txtOID.getText();
            String orderDate = txtODate.getText();
            String customerID = cmbCusID.getSelectedItem().toString();

            OrderDTO order = new OrderDTO(orderID, orderDate, customerID);

////        details for OrderDetails
//            ArrayList<OrderDetailDTO> allOrderDetails = new ArrayList<>();
            for (int i = 0; i < dtm.getRowCount(); i++) {

                String itemCode = dtm.getValueAt(i, 0).toString();
                int qty = Integer.parseInt(dtm.getValueAt(i, 2).toString());
                double unitPrice = Double.parseDouble(dtm.getValueAt(i, 3).toString());

                OrderDetailDTO orderDetail = new OrderDetailDTO(orderID, itemCode, qty, unitPrice);
                order.getOrderDetails().add(orderDetail);
            }

           
            boolean purchaseOrder = new OrderFormController().purchaseOrder(order);
            if (purchaseOrder) {
                JOptionPane.showMessageDialog(this, "Order Placed");
            } else {
                JOptionPane.showMessageDialog(this, "Eroor");
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(OrderForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(OrderForm.class.getName()).log(Level.SEVERE, null, ex);
        }
      
      */
      
      
  


    }//GEN-LAST:event_btnPlaceOrderActionPerformed

    private void addNewCustomerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewCustomerButtonActionPerformed
        new CustomerFrom().setVisible(true);
    }//GEN-LAST:event_addNewCustomerButtonActionPerformed

    private void txtSerchCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSerchCustomerActionPerformed
        
        
      String customerNumber = txtSerchCustomer.getText();

        try {
            Customer searchCustomer = new CustomerFormController().searchContact(customerNumber);
            if (searchCustomer != null) {
                cmbCustomerId.getEditor().setItem(searchCustomer.getCid());
                lblCustomerName.setText(searchCustomer.getName());
                txtSerchCustomer.setText(searchCustomer.getContacts());
                lblCusAdress.setText(searchCustomer.getAddress());
               
            } else {
                //clearAllText();
            }

        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(PlaceOrderForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(PlaceOrderForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtSerchCustomerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PlaceOrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PlaceOrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PlaceOrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PlaceOrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new PlaceOrderForm().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(PlaceOrderForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addNewCustomerButton;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnPlaceOrder;
    private javax.swing.JButton btnRemove;
    private javax.swing.JComboBox<String> cmbCustomerId;
    private javax.swing.JComboBox<String> cmbItemCode;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblCusAdress;
    private javax.swing.JLabel lblCustomerName;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblOrderId;
    private javax.swing.JLabel lblQtyOnHand;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JLabel lblUnitPrice;
    private javax.swing.JTable tblItemDetails;
    private javax.swing.JTextField txtOrderDate;
    private javax.swing.JTextField txtQty;
    private javax.swing.JTextField txtSerchCustomer;
    // End of variables declaration//GEN-END:variables
}
